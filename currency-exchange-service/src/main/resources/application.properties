spring.application.name=currency-exchange
server.port=8000

# to register with the naming server + add "spring-cloud-starter-netflix-eureka-client" dependency - that's all!
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# to reach the config server
spring.config.import=optional:configserver:http://localhost:8888

# Resilience4j - the number of retries, and the waiting interval between them, 3rd param: waiting time is growing exponentially
resilience4j.retry.instances.sample-api.maxAttempts=5
resilience4j.retry.instances.sample-api.waitDuration=1s
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true

# Circuit Breaker settings acc. to https://resilience4j.readme.io/docs/circuitbreaker  (managing the 3 states...)
resilience4j.circuitbreaker.instances.default.failureRateThreshold=90

# Rale Limiter settings: it allows only 2 calls in 10s, after that throws an exception - you can replace "default" with the name of the api
resilience4j.ratelimiter.instances.default.limitForPeriod=2
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=10s

resilience4j.bulkhead.instances.default.maxConcurrentCalls=10
# setting for the "sample-api" api (name)
resilience4j.bulkhead.instances.sample-api.maxConcurrentCalls=20

# profile decides which .prop file to use for config
spring.profiles.active=qa

## TO RUN MULTIPLE INSTANCES:
# Edit config / by + >> set more...
# Application... unique name...
# Modify options >> enable Allow multiple instances + VM options
# set the Build and run settings for the multiple instances + VM Options = "-Dserver.port=8001"

# /h2-console
spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true
# in new spring boot versions data load is before data table creation, that's why we need this:
spring.jpa.defer-datasource-initialization=true
# this setting or use schema.sql instead of data.sql